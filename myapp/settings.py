"""
Django settings for myapp project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path

from dotenv import load_dotenv
import json


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

USE_I18N = True

LANGUAGES = [
    ("en", "English"),
    ("fr", "French"),  # Add more languages as needed
]

LOCALE_PATHS = [
    BASE_DIR / "locale",  # Ensure this directory exists
]

# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/
# # Application definition
for filename in [".env", ".env.local"]:
    absoluteFile = os.path.abspath(os.path.join(BASE_DIR, filename))
    if os.path.isfile(absoluteFile):
        load_dotenv(dotenv_path=absoluteFile, override=True)
SECRET_KEY = os.environ.get("SECRET_KEY", "")
DEBUG = str(os.environ.get("APP_DEBUG", "0")).strip().lower() in ["true", "1"]
ALLOWED_HOSTS = json.loads(os.environ.get("ALLOWED_HOSTS", "[]"))
STATIC_ROOT = os.path.join(BASE_DIR, "assets")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "myapp/static"),
]
secure = str(os.environ.get("APP_SECURE", "true")).strip().lower() in ("true", "1")
if secure:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = int(json.loads(os.environ.get("SECURE_HSTS_SECONDS", "300")))
    SECURE_HSTS_PRELOAD = True
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True

try:
    ssl_header = json.loads(os.environ.get("SECURE_PROXY_SSL_HEADER", "{}"))
    if isinstance(ssl_header, dict) and len(ssl_header.items()) > 0:
        SECURE_PROXY_SSL_HEADER = list(ssl_header.items())[0]
except (json.JSONDecodeError, TypeError):
    pass

INVOICE_IBAN = os.environ.get("IBAN", "")
INVOICE_CUSTOMER_IDENTIFICATION_NUMBER = os.environ.get(
    "CUSTOMER_IDENTIFICATION_NUMBER", ""
)
INVOICE_LANGUAGE = os.environ.get("LANGUAGE", "fr")

CREDITOR_NAME = os.environ.get(
    "CREDITOR_NAME", "Association du Jardin du Vanil 10-12-14"
)
CREDITOR_ADDRESS = os.environ.get("CREDITOR_ADDRESS", "Ch. du Vanil")
CREDITOR_ADDRESS_HOUSE_NUMBER = os.environ.get("CREDITOR_ADDRESS_HOUSE_NUMBER", "10")
CREDITOR_ZIP = os.environ.get("CREDITOR_ZIP", "1004")
CREDITOR_CITY = os.environ.get("CREDITOR_CITY", "Lausanne")
CREDITOR_COUNTRY = os.environ.get("CREDITOR_COUNTRY", "CH")

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "myapp",
]

if DEBUG:
    INSTALLED_APPS += [
        "debug_toolbar",
    ]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]
if DEBUG:
    MIDDLEWARE += [
        "debug_toolbar.middleware.DebugToolbarMiddleware",
    ]

ROOT_URLCONF = "myapp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "myapp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases
DB_ENV = os.environ.get("DB_ENV", "dev")
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db" / f"{DB_ENV}.sqlite",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "assets/"
MEDIA_URL = "medias/"
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
}


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

INTERNAL_IPS = os.environ.get("INTERNAL_IPS", "").split(",")

FILE_UPLOAD_MAX_MEMORY_SIZE = 20971520  # 20mb
FILE_UPLOAD_HANDLERS = [
    "django.core.files.uploadhandler.MemoryFileUploadHandler",
    "django.core.files.uploadhandler.TemporaryFileUploadHandler",
]

AUTHENTICATION_BACKENDS = ["myapp.auth.settings_backend.SettingsBackend"]
